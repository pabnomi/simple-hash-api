name: Fake deploy with multi-stage Dockerfile
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: pip install flake8

      - name: Run flake8
        uses: wearerequired/lint-action@v1
        with:
          flake8: true

  fake_deploy_cache_multi:
    needs: linter
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE="hub.docker.com/imlucio/flask-container-ci"
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        # Only worked for us with this option on ü§∑‚Äç‚ôÇÔ∏è
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx
      - name: Build production image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          push: false
          # Enables access to the image on the next steps
          load: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Quick testing
        run: |
          docker run --rm -d --name hash-api-ci-test -p 8080:8080 ${{ steps.prep.outputs.tagged_image }}
          docker run --link hash-api-ci-test:hash-api-ci-test waisbrot/wait
          curl --fail -X POST -H 'Content-Type: text/json' -d '{ "message": "hola" }' localhost:8080/messages
          curl --fail localhost:8080/messages/b221d9dbb083a7f33428d7c2a3c3198ae925614d70210e28716ccaa7cd4ddb79